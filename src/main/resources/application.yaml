openapi:
  title: Cinema Seat Reservation System API
  version: 1.3.2
  description: |
    REST API for cinema ticket booking with Kotlin Coroutines and Micronaut Framework.

    ## Features
    - Multi-ticket reservation with different ticket types
    - Time-based seat holds (configurable timeout)
    - Automatic expiration of unpaid reservations
    - Real-time seat availability

    ## Authentication
    Currently no authentication required (development mode)

    ## Rate Limiting
    No rate limiting applied
  contact:
    name: Rafa≈Ç Kociniewski
    email: contact@example.com
    url: https://github.com/rkociniewski/csrs
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
  servers:
    - url: http://localhost:8080
      description: Development server
    - url: https://api.cinema.example.com
      description: Production server

micronaut:
  application:
    name: csrs
  task:
    enabled: true
  metrics:
    enabled: true
    export:
      prometheus:
        enabled: true
        step: PT1M  # scrape interval
        descriptions: true
    binders:
      jvm:
        enabled: true  # JVM memory, threads, GC
      web:
        enabled: true  # HTTP request metrics
      logback:
        enabled: true  # Logging metrics
      uptime:
        enabled: true  # Application uptime
      processor:
        enabled: true  # CPU metrics
      files:
        enabled: true  # File descriptor metrics
      hikaricp:
        enabled: true  # Database connection pool metrics
  router:
    static-resources:
      swagger:
        paths: classpath:META-INF/swagger
        mapping: /swagger/**
      swagger-ui:
        paths: classpath:META-INF/swagger/views/swagger-ui
        mapping: /swagger-ui/**

endpoints:
  prometheus:
    enabled: true
    sensitive: false  # Set to true in production with authentication
  health:
    enabled: true
    sensitive: false
    details-visible: ANONYMOUS  # Show health details
  metrics:
    enabled: true
    sensitive: false

datasources:
  default:
    url: jdbc:postgresql://localhost:5432/cinema
    username: cinema
    password: cinema
    driverClassName: org.postgresql.Driver
    metrics:
      enabled: true  # Enable datasource metrics

flyway:
  datasources:
    default:
      enabled: true

csrs:
  reservation:
    timeout-minutes: 15

logger:
  levels:
    rk.powermilk.cinema: DEBUG
